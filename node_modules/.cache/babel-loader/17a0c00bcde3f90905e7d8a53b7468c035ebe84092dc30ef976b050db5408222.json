{"ast":null,"code":"import React from'react';import{getLevelColor,getLevelLabel}from'../utils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Tooltip=_ref=>{let{suggestion,children}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group inline\",children:[children,/*#__PURE__*/_jsxs(\"div\",{className:\"absolute z-10 w-80 p-4 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none bottom-full left-1/2 transform -translate-x-1/2 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-200\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"inline-block px-2 py-1 text-xs font-semibold rounded \".concat(getLevelColor(suggestion.level),\" bg-gray-100\"),children:[\"Level \",suggestion.level,\": \",getLevelLabel(suggestion.level)]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700 font-medium\",children:\"Issue:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:suggestion.reason})]}),suggestion.replacement&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700 font-medium\",children:\"Suggested:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-600 bg-green-50 p-2 rounded border\",children:suggestion.replacement})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700 font-medium\",children:\"Original:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 bg-gray-50 p-2 rounded border\",children:suggestion.original})]})]})]});};export default Tooltip;","map":{"version":3,"names":["React","getLevelColor","getLevelLabel","jsx","_jsx","jsxs","_jsxs","Tooltip","_ref","suggestion","children","className","concat","level","reason","replacement","original"],"sources":["/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/components/Tooltip.tsx"],"sourcesContent":["import React from 'react';\nimport { Suggestion } from '../types';\nimport { getLevelColor, getLevelLabel } from '../utils';\n\ninterface TooltipProps {\n  suggestion: Suggestion;\n  children: React.ReactNode;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ suggestion, children }) => {\n  return (\n    <div className=\"relative group inline\">\n      {children}\n      <div className=\"absolute z-10 w-80 p-4 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none bottom-full left-1/2 transform -translate-x-1/2 mb-2\">\n        <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-200\"></div>\n        \n        <div className=\"mb-2\">\n          <span className={`inline-block px-2 py-1 text-xs font-semibold rounded ${getLevelColor(suggestion.level)} bg-gray-100`}>\n            Level {suggestion.level}: {getLevelLabel(suggestion.level)}\n          </span>\n        </div>\n        \n        <div className=\"mb-3\">\n          <p className=\"text-sm text-gray-700 font-medium\">Issue:</p>\n          <p className=\"text-sm text-gray-600\">{suggestion.reason}</p>\n        </div>\n        \n        {suggestion.replacement && (\n          <div className=\"mb-3\">\n            <p className=\"text-sm text-gray-700 font-medium\">Suggested:</p>\n            <p className=\"text-sm text-green-600 bg-green-50 p-2 rounded border\">\n              {suggestion.replacement}\n            </p>\n          </div>\n        )}\n        \n        <div>\n          <p className=\"text-sm text-gray-700 font-medium\">Original:</p>\n          <p className=\"text-sm text-gray-500 bg-gray-50 p-2 rounded border\">\n            {suggestion.original}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tooltip; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,aAAa,CAAEC,aAAa,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOxD,KAAM,CAAAC,OAA+B,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC/D,mBACEF,KAAA,QAAKK,SAAS,CAAC,uBAAuB,CAAAD,QAAA,EACnCA,QAAQ,cACTJ,KAAA,QAAKK,SAAS,CAAC,wNAAwN,CAAAD,QAAA,eACrON,IAAA,QAAKO,SAAS,CAAC,qIAAqI,CAAM,CAAC,cAE3JP,IAAA,QAAKO,SAAS,CAAC,MAAM,CAAAD,QAAA,cACnBJ,KAAA,SAAMK,SAAS,yDAAAC,MAAA,CAA0DX,aAAa,CAACQ,UAAU,CAACI,KAAK,CAAC,gBAAe,CAAAH,QAAA,EAAC,QAChH,CAACD,UAAU,CAACI,KAAK,CAAC,IAAE,CAACX,aAAa,CAACO,UAAU,CAACI,KAAK,CAAC,EACtD,CAAC,CACJ,CAAC,cAENP,KAAA,QAAKK,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnBN,IAAA,MAAGO,SAAS,CAAC,mCAAmC,CAAAD,QAAA,CAAC,QAAM,CAAG,CAAC,cAC3DN,IAAA,MAAGO,SAAS,CAAC,uBAAuB,CAAAD,QAAA,CAAED,UAAU,CAACK,MAAM,CAAI,CAAC,EACzD,CAAC,CAELL,UAAU,CAACM,WAAW,eACrBT,KAAA,QAAKK,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnBN,IAAA,MAAGO,SAAS,CAAC,mCAAmC,CAAAD,QAAA,CAAC,YAAU,CAAG,CAAC,cAC/DN,IAAA,MAAGO,SAAS,CAAC,uDAAuD,CAAAD,QAAA,CACjED,UAAU,CAACM,WAAW,CACtB,CAAC,EACD,CACN,cAEDT,KAAA,QAAAI,QAAA,eACEN,IAAA,MAAGO,SAAS,CAAC,mCAAmC,CAAAD,QAAA,CAAC,WAAS,CAAG,CAAC,cAC9DN,IAAA,MAAGO,SAAS,CAAC,qDAAqD,CAAAD,QAAA,CAC/DD,UAAU,CAACO,QAAQ,CACnB,CAAC,EACD,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}