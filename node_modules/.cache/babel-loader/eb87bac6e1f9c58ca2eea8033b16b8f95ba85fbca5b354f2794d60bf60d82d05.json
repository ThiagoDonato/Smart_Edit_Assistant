{"ast":null,"code":"var _jsxFileName = \"/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/components/SuggestionOverlay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { getLevelClassName } from '../utils';\nimport Tooltip from './Tooltip';\nimport DiffHighlight from './DiffHighlight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionOverlay = ({\n  spans,\n  onAccept,\n  onReject\n}) => {\n  _s();\n  const [activeSuggestionId, setActiveSuggestionId] = useState(null);\n  const timerRef = useRef(null);\n  const handleMouseEnter = id => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    setActiveSuggestionId(id);\n  };\n  const handleMouseLeave = () => {\n    timerRef.current = setTimeout(() => {\n      setActiveSuggestionId(null);\n    }, 200);\n  };\n  if (spans.length === 0) {\n    return null;\n  }\n  const getHighlightClassName = suggestion => {\n    if (suggestion.status === 'accepted') {\n      return 'highlight-accepted';\n    }\n    return getLevelClassName(suggestion.level);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full p-4 border border-gray-300 rounded-lg bg-white font-mono text-sm leading-relaxed whitespace-pre-wrap\",\n    children: spans.map((span, index) => {\n      if (span.isHighlighted && span.suggestion && span.suggestion.status !== 'rejected') {\n        const suggestionId = span.suggestion.id;\n        const isActive = activeSuggestionId === suggestionId;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"relative inline\",\n          onMouseEnter: () => handleMouseEnter(suggestionId),\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: getHighlightClassName(span.suggestion),\n            children: span.suggestion.status === 'accepted' && span.suggestion.replacement ? /*#__PURE__*/_jsxDEV(DiffHighlight, {\n              original: span.suggestion.original,\n              replacement: span.suggestion.replacement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : span.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), isActive && /*#__PURE__*/_jsxDEV(Tooltip, {\n            suggestion: span.suggestion,\n            onAccept: onAccept,\n            onReject: onReject,\n            onMouseEnter: () => handleMouseEnter(suggestionId),\n            onMouseLeave: handleMouseLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: span.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SuggestionOverlay, \"fUVIeJlkn+eg4/MH1y/exfUql7o=\");\n_c = SuggestionOverlay;\nexport default SuggestionOverlay;\nvar _c;\n$RefreshReg$(_c, \"SuggestionOverlay\");","map":{"version":3,"names":["React","useState","useRef","getLevelClassName","Tooltip","DiffHighlight","jsxDEV","_jsxDEV","SuggestionOverlay","spans","onAccept","onReject","_s","activeSuggestionId","setActiveSuggestionId","timerRef","handleMouseEnter","id","current","clearTimeout","handleMouseLeave","setTimeout","length","getHighlightClassName","suggestion","status","level","className","children","map","span","index","isHighlighted","suggestionId","isActive","onMouseEnter","onMouseLeave","replacement","original","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/components/SuggestionOverlay.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { HighlightSpan, Suggestion } from '../types';\nimport { getLevelClassName } from '../utils';\nimport Tooltip from './Tooltip';\nimport DiffHighlight from './DiffHighlight';\n\ninterface SuggestionOverlayProps {\n  spans: HighlightSpan[];\n  onAccept: (id: string) => void;\n  onReject: (id: string) => void;\n}\n\nconst SuggestionOverlay: React.FC<SuggestionOverlayProps> = ({ spans, onAccept, onReject }) => {\n  const [activeSuggestionId, setActiveSuggestionId] = useState<string | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const handleMouseEnter = (id: string) => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    setActiveSuggestionId(id);\n  };\n\n  const handleMouseLeave = () => {\n    timerRef.current = setTimeout(() => {\n      setActiveSuggestionId(null);\n    }, 200);\n  };\n\n  if (spans.length === 0) {\n    return null;\n  }\n\n  const getHighlightClassName = (suggestion: Suggestion): string => {\n    if (suggestion.status === 'accepted') {\n      return 'highlight-accepted';\n    }\n    return getLevelClassName(suggestion.level);\n  };\n\n  return (\n    <div className=\"w-full p-4 border border-gray-300 rounded-lg bg-white font-mono text-sm leading-relaxed whitespace-pre-wrap\">\n      {spans.map((span, index) => {\n        if (span.isHighlighted && span.suggestion && span.suggestion.status !== 'rejected') {\n          const suggestionId = span.suggestion.id;\n          const isActive = activeSuggestionId === suggestionId;\n\n          return (\n            <span\n              key={index}\n              className=\"relative inline\"\n              onMouseEnter={() => handleMouseEnter(suggestionId)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <span className={getHighlightClassName(span.suggestion)}>\n                {span.suggestion.status === 'accepted' && span.suggestion.replacement ? (\n                  <DiffHighlight original={span.suggestion.original} replacement={span.suggestion.replacement} />\n                ) : (\n                  span.text\n                )}\n              </span>\n              {isActive && (\n                <Tooltip\n                  suggestion={span.suggestion}\n                  onAccept={onAccept}\n                  onReject={onReject}\n                  onMouseEnter={() => handleMouseEnter(suggestionId)}\n                  onMouseLeave={handleMouseLeave}\n                />\n              )}\n            </span>\n          );\n        }\n        return <span key={index}>{span.text}</span>;\n      })}\n    </div>\n  );\n};\n\nexport default SuggestionOverlay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}