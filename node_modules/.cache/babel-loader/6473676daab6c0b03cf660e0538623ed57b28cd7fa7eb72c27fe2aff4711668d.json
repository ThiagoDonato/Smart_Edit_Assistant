{"ast":null,"code":"export const processTextWithSuggestions=(text,suggestions)=>{if(!suggestions.length){return[{text,isHighlighted:false}];}// Sort suggestions by start position\nconst sortedSuggestions=[...suggestions].sort((a,b)=>a.start-b.start);const spans=[];let currentIndex=0;sortedSuggestions.forEach(suggestion=>{// Add text before the suggestion\nif(currentIndex<suggestion.start){spans.push({text:text.slice(currentIndex,suggestion.start),isHighlighted:false});}// Add the highlighted suggestion\nspans.push({text:text.slice(suggestion.start,suggestion.end),suggestion,isHighlighted:true});currentIndex=suggestion.end;});// Add remaining text after the last suggestion\nif(currentIndex<text.length){spans.push({text:text.slice(currentIndex),isHighlighted:false});}return spans;};export const getLevelClassName=level=>{switch(level){case 1:return'highlight-level-1';case 2:return'highlight-level-2';case 3:return'highlight-level-3';default:return'';}};export const getLevelColor=level=>{switch(level){case 1:return'text-blue-600';case 2:return'text-yellow-600';case 3:return'text-red-600';default:return'';}};export const getLevelLabel=level=>{switch(level){case 1:return'Grammar';case 2:return'Structure';case 3:return'Content';default:return'';}};","map":{"version":3,"names":["processTextWithSuggestions","text","suggestions","length","isHighlighted","sortedSuggestions","sort","a","b","start","spans","currentIndex","forEach","suggestion","push","slice","end","getLevelClassName","level","getLevelColor","getLevelLabel"],"sources":["/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/utils.ts"],"sourcesContent":["import { Suggestion, HighlightSpan } from './types';\n\nexport const processTextWithSuggestions = (text: string, suggestions: Suggestion[]): HighlightSpan[] => {\n  if (!suggestions.length) {\n    return [{ text, isHighlighted: false }];\n  }\n\n  // Sort suggestions by start position\n  const sortedSuggestions = [...suggestions].sort((a, b) => a.start - b.start);\n  const spans: HighlightSpan[] = [];\n  let currentIndex = 0;\n\n  sortedSuggestions.forEach((suggestion) => {\n    // Add text before the suggestion\n    if (currentIndex < suggestion.start) {\n      spans.push({\n        text: text.slice(currentIndex, suggestion.start),\n        isHighlighted: false,\n      });\n    }\n\n    // Add the highlighted suggestion\n    spans.push({\n      text: text.slice(suggestion.start, suggestion.end),\n      suggestion,\n      isHighlighted: true,\n    });\n\n    currentIndex = suggestion.end;\n  });\n\n  // Add remaining text after the last suggestion\n  if (currentIndex < text.length) {\n    spans.push({\n      text: text.slice(currentIndex),\n      isHighlighted: false,\n    });\n  }\n\n  return spans;\n};\n\nexport const getLevelClassName = (level: 1 | 2 | 3): string => {\n  switch (level) {\n    case 1:\n      return 'highlight-level-1';\n    case 2:\n      return 'highlight-level-2';\n    case 3:\n      return 'highlight-level-3';\n    default:\n      return '';\n  }\n};\n\nexport const getLevelColor = (level: 1 | 2 | 3): string => {\n  switch (level) {\n    case 1:\n      return 'text-blue-600';\n    case 2:\n      return 'text-yellow-600';\n    case 3:\n      return 'text-red-600';\n    default:\n      return '';\n  }\n};\n\nexport const getLevelLabel = (level: 1 | 2 | 3): string => {\n  switch (level) {\n    case 1:\n      return 'Grammar';\n    case 2:\n      return 'Structure';\n    case 3:\n      return 'Content';\n    default:\n      return '';\n  }\n}; "],"mappings":"AAEA,MAAO,MAAM,CAAAA,0BAA0B,CAAGA,CAACC,IAAY,CAAEC,WAAyB,GAAsB,CACtG,GAAI,CAACA,WAAW,CAACC,MAAM,CAAE,CACvB,MAAO,CAAC,CAAEF,IAAI,CAAEG,aAAa,CAAE,KAAM,CAAC,CAAC,CACzC,CAEA;AACA,KAAM,CAAAC,iBAAiB,CAAG,CAAC,GAAGH,WAAW,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,KAAK,CAAGD,CAAC,CAACC,KAAK,CAAC,CAC5E,KAAM,CAAAC,KAAsB,CAAG,EAAE,CACjC,GAAI,CAAAC,YAAY,CAAG,CAAC,CAEpBN,iBAAiB,CAACO,OAAO,CAAEC,UAAU,EAAK,CACxC;AACA,GAAIF,YAAY,CAAGE,UAAU,CAACJ,KAAK,CAAE,CACnCC,KAAK,CAACI,IAAI,CAAC,CACTb,IAAI,CAAEA,IAAI,CAACc,KAAK,CAACJ,YAAY,CAAEE,UAAU,CAACJ,KAAK,CAAC,CAChDL,aAAa,CAAE,KACjB,CAAC,CAAC,CACJ,CAEA;AACAM,KAAK,CAACI,IAAI,CAAC,CACTb,IAAI,CAAEA,IAAI,CAACc,KAAK,CAACF,UAAU,CAACJ,KAAK,CAAEI,UAAU,CAACG,GAAG,CAAC,CAClDH,UAAU,CACVT,aAAa,CAAE,IACjB,CAAC,CAAC,CAEFO,YAAY,CAAGE,UAAU,CAACG,GAAG,CAC/B,CAAC,CAAC,CAEF;AACA,GAAIL,YAAY,CAAGV,IAAI,CAACE,MAAM,CAAE,CAC9BO,KAAK,CAACI,IAAI,CAAC,CACTb,IAAI,CAAEA,IAAI,CAACc,KAAK,CAACJ,YAAY,CAAC,CAC9BP,aAAa,CAAE,KACjB,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAM,KAAK,CACd,CAAC,CAED,MAAO,MAAM,CAAAO,iBAAiB,CAAIC,KAAgB,EAAa,CAC7D,OAAQA,KAAK,EACX,IAAK,EAAC,CACJ,MAAO,mBAAmB,CAC5B,IAAK,EAAC,CACJ,MAAO,mBAAmB,CAC5B,IAAK,EAAC,CACJ,MAAO,mBAAmB,CAC5B,QACE,MAAO,EAAE,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAID,KAAgB,EAAa,CACzD,OAAQA,KAAK,EACX,IAAK,EAAC,CACJ,MAAO,eAAe,CACxB,IAAK,EAAC,CACJ,MAAO,iBAAiB,CAC1B,IAAK,EAAC,CACJ,MAAO,cAAc,CACvB,QACE,MAAO,EAAE,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAIF,KAAgB,EAAa,CACzD,OAAQA,KAAK,EACX,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,IAAK,EAAC,CACJ,MAAO,WAAW,CACpB,IAAK,EAAC,CACJ,MAAO,SAAS,CAClB,QACE,MAAO,EAAE,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}