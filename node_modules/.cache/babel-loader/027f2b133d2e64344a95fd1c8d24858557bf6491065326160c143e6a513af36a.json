{"ast":null,"code":"var _jsxFileName = \"/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/components/SuggestionOverlay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getLevelClassName } from '../utils';\nimport Tooltip from './Tooltip';\nimport DiffHighlight from './DiffHighlight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionOverlay = ({\n  spans,\n  onAccept,\n  onReject\n}) => {\n  _s();\n  const [activeSuggestionId, setActiveSuggestionId] = useState(null);\n  const handleSuggestionClick = id => {\n    setActiveSuggestionId(prevId => prevId === id ? null : id);\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (!activeSuggestionId) return;\n      if (event.key === 'a' || event.key === 'Enter') {\n        onAccept(activeSuggestionId);\n        setActiveSuggestionId(null);\n      } else if (event.key === 'r' || event.key === 'Backspace') {\n        onReject(activeSuggestionId);\n        setActiveSuggestionId(null);\n      } else if (event.key === 'Escape') {\n        setActiveSuggestionId(null);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [activeSuggestionId, onAccept, onReject]);\n  if (spans.length === 0) {\n    return null;\n  }\n  const getHighlightClassName = suggestion => {\n    if (suggestion.status === 'accepted') {\n      return 'highlight-accepted';\n    }\n    return getLevelClassName(suggestion.level);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full p-4 border border-gray-300 rounded-lg bg-white font-mono text-sm leading-relaxed whitespace-pre-wrap\",\n    children: spans.map((span, index) => {\n      if (span.isHighlighted && span.suggestion && span.suggestion.status !== 'rejected') {\n        const suggestionId = span.suggestion.id;\n        const isActive = activeSuggestionId === suggestionId;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"relative inline\",\n          onClick: () => handleSuggestionClick(suggestionId),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: getHighlightClassName(span.suggestion),\n            children: span.suggestion.replacement ? /*#__PURE__*/_jsxDEV(DiffHighlight, {\n              original: span.suggestion.original,\n              replacement: span.suggestion.replacement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this) : span.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), isActive && /*#__PURE__*/_jsxDEV(Tooltip, {\n            suggestion: span.suggestion,\n            onAccept: onAccept,\n            onReject: onReject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: span.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SuggestionOverlay, \"VFjwka9tXlYi1rhpMOwqGf7xT38=\");\n_c = SuggestionOverlay;\nexport default SuggestionOverlay;\nvar _c;\n$RefreshReg$(_c, \"SuggestionOverlay\");","map":{"version":3,"names":["React","useState","useEffect","getLevelClassName","Tooltip","DiffHighlight","jsxDEV","_jsxDEV","SuggestionOverlay","spans","onAccept","onReject","_s","activeSuggestionId","setActiveSuggestionId","handleSuggestionClick","id","prevId","handleKeyDown","event","key","window","addEventListener","removeEventListener","length","getHighlightClassName","suggestion","status","level","className","children","map","span","index","isHighlighted","suggestionId","isActive","onClick","replacement","original","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["/Users/thiagodonato/Documents/App_Projects/Edit_Text/src/components/SuggestionOverlay.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { HighlightSpan, Suggestion } from '../types';\nimport { getLevelClassName } from '../utils';\nimport Tooltip from './Tooltip';\nimport DiffHighlight from './DiffHighlight';\n\ninterface SuggestionOverlayProps {\n  spans: HighlightSpan[];\n  onAccept: (id: string) => void;\n  onReject: (id: string) => void;\n}\n\nconst SuggestionOverlay: React.FC<SuggestionOverlayProps> = ({ spans, onAccept, onReject }) => {\n  const [activeSuggestionId, setActiveSuggestionId] = useState<string | null>(null);\n\n  const handleSuggestionClick = (id: string) => {\n    setActiveSuggestionId(prevId => (prevId === id ? null : id));\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!activeSuggestionId) return;\n\n      if (event.key === 'a' || event.key === 'Enter') {\n        onAccept(activeSuggestionId);\n        setActiveSuggestionId(null);\n      } else if (event.key === 'r' || event.key === 'Backspace') {\n        onReject(activeSuggestionId);\n        setActiveSuggestionId(null);\n      } else if (event.key === 'Escape') {\n        setActiveSuggestionId(null);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [activeSuggestionId, onAccept, onReject]);\n\n  if (spans.length === 0) {\n    return null;\n  }\n\n  const getHighlightClassName = (suggestion: Suggestion): string => {\n    if (suggestion.status === 'accepted') {\n      return 'highlight-accepted';\n    }\n    return getLevelClassName(suggestion.level);\n  };\n\n  return (\n    <div className=\"w-full p-4 border border-gray-300 rounded-lg bg-white font-mono text-sm leading-relaxed whitespace-pre-wrap\">\n      {spans.map((span, index) => {\n        if (span.isHighlighted && span.suggestion && span.suggestion.status !== 'rejected') {\n          const suggestionId = span.suggestion.id;\n          const isActive = activeSuggestionId === suggestionId;\n\n          return (\n            <span\n              key={index}\n              className=\"relative inline\"\n              onClick={() => handleSuggestionClick(suggestionId)}\n            >\n              <span className={getHighlightClassName(span.suggestion)}>\n                {span.suggestion.replacement ? (\n                  <DiffHighlight original={span.suggestion.original} replacement={span.suggestion.replacement} />\n                ) : (\n                  span.text\n                )}\n              </span>\n              {isActive && (\n                <Tooltip\n                  suggestion={span.suggestion}\n                  onAccept={onAccept}\n                  onReject={onReject}\n                />\n              )}\n            </span>\n          );\n        }\n        return <span key={index}>{span.text}</span>;\n      })}\n    </div>\n  );\n};\n\nexport default SuggestionOverlay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}